'use strict';

//all data types return true except number.

let isNumber = function(n){
    return !isNaN(parseFloat(n)) && isFinite(n);
};

let sumExpences = 0;
let promptResult =0;

let money,
    accumulatedMonth, 
    start = function(){
       do{
          money = prompt("–í–∞—à –º–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥?");
       }
       while ( !isNumber(money) );
        };
     start();


let appData = {
  icome: {},
  addIncome: [],
  expenses: {},
  addExpenses: [],
  deposit: false,
  mission: 300000,
  period: 3,
  asking: function(){    
     let addExpenses = prompt("–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º—ã–π –ø–µ—Ä–∏–æ–¥ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é");
         appData.addExpenses = addExpenses.toLowerCase().split(", ");
         appData.deposit = confirm("–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –¥–µ–ø–æ–∑–∏—Ç –≤ –±–∞–Ω–∫–µ?");

         for (let i = 0; i<2; i++) {

          appData.expenses[i] = prompt("–í–≤–µ–¥–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é —Å—Ç–∞—Ç—å—é —Ä–∞—Å—Ö–æ–¥–æ–≤?");


          do {
            promptResult = prompt("–í–æ —Å–∫–æ–ª—å–∫–æ —ç—Ç–æ –æ–±–æ–π–¥–µ—Ç—Å—è?");
          } while (!isNumber(promptResult) && promptResult !== null);

          sumExpences += parseFloat(promptResult);
        }
        console.log(appData.expenses);

        return sumExpences;
       
  },
  budget: money,
  budgetDay: 0,
  budgetMonth: 0,
  expensesMonth: 0,
  getExpensesMonth: function(){
 /*     let sum = 0;
      let promptResult =0;

      for (let i = 0; i<2; i++) {

          expenses[i] = prompt("–í–≤–µ–¥–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é —Å—Ç–∞—Ç—å—é —Ä–∞—Å—Ö–æ–¥–æ–≤?");

          do {
              promptResult = prompt("–í–æ —Å–∫–æ–ª—å–∫–æ —ç—Ç–æ –æ–±–æ–π–¥–µ—Ç—Å—è?");
          } while (!isNumber(promptResult) && promptResult !== null);

          sum += parseFloat(promptResult);
      }
      console.log(expenses);

      return sum;
    console.log(typeof(sum));*/
  },
  getAccumulatedMonth: function(){
    return money - expensesAmount;
  },

  getTargetMonth: function(){
    let result = Math.floor(appData.mission / accumulatedMonth) ;
    if (result >= 0) {
        console.log(`–í–∞—à–∞ —Ü–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –∑–∞ : ` + result + ` –º–µ—Å.`);
    } else {
        console.log("–í–∞—à–∞ —Ü–µ–ª—å –Ω–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞");
    }
  },
  getStatusIncome: function(){
    if (appData.budgetDay >= 1200) {
        console.log("–£ –≤–∞—Å –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Ö–æ–¥–∞ ü§ë");
    } else if ( appData.budgetDay >= 600 && appData.budgetDay < 1200){
        console.log("–£ –≤–∞—Å —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Ö–æ–¥–∞ üòâ");
    } else if (appData.budgetDay >= 0 && appData.budgetDay < 600 ){
        console.log("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å —É—Ä–æ–≤–µ–Ω—å –¥–æ—Ö–æ–¥–∞ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ üò™");
    } else {
        console.log("–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üßê");
    }
},

};     

appData.asking()


let expenses =[];

let expensesAmount = sumExpences;
console.log(expensesAmount);

console.log("–°—É–º–º–∞ –≤—Å–µ—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –º–µ—Å—è—Ü: " + expensesAmount + " y.e.");


accumulatedMonth = appData.getAccumulatedMonth();

console.log("–ù–∞–∫–æ–ø–ª–µ–Ω–∏—è –∑–∞ –º–µ—Å—è—Ü: " + accumulatedMonth + " y.e.");

let getTargetMonth = appData.getTargetMonth();

appData.budgetDay = Math.round(accumulatedMonth / 30);
console.log("–ë—é—Ç–∂–µ—Ç –Ω–∞ –¥–µ–Ω—å " + appData.budgetDay + " y.e.");


let getStatusIncome = appData.getStatusIncome();



