//all data types return true except number.

let isNumber = function(n){
    return !isNaN(parseFloat(n)) && isFinite(n);
};

let money, income, addExpenses, deposit, mission, period;

mission ="be happy!";


money = 3000;
income = "rent";
addExpenses = "lessons, english, restaurants";
deposit = false;
mission = 300000;
period = 3;

addExpenses = prompt("–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º—ã–π –ø–µ—Ä–∏–æ–¥ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é");

let arr = addExpenses.toLowerCase().split(", ");
console.log(arr);

deposit = confirm("–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –¥–µ–ø–æ–∑–∏—Ç –≤ –±–∞–Ω–∫–µ?");


let start = function(){
    do{
        money = prompt("–í–∞—à –º–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥?");
    }
    while ( !isNumber(money) );
};
start();


let showTypeof = function(data){
    console.log(data, typeof(data));
};
showTypeof(money);
showTypeof(income);
showTypeof(deposit);

let expenses =[];

let getExpensesMonth = function(){
      let sum = 0;
      let promptResult =0;

      for (let i = 0; i<2; i++) {

          expenses[i] = prompt("–í–≤–µ–¥–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é —Å—Ç–∞—Ç—å—é —Ä–∞—Å—Ö–æ–¥–æ–≤?");

          do {
              promptResult = prompt("–í–æ —Å–∫–æ–ª—å–∫–æ —ç—Ç–æ –æ–±–æ–π–¥–µ—Ç—Å—è?");
          } while (!isNumber(promptResult));

          sum += parseFloat(promptResult);
      }
      console.log(expenses);

      return sum;
    console.log(typeof(sum));
};

let expensesAmount = getExpensesMonth();
console.log(expensesAmount);

console.log("–°—É–º–º–∞ –≤—Å–µ—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –º–µ—Å—è—Ü: " + expensesAmount + " y.e.");


let getAccumulatedMonth = function(){
    return money - expensesAmount;
};

let accumulatedMonth = getAccumulatedMonth();

console.log("–ù–∞–∫–æ–ø–ª–µ–Ω–∏—è –∑–∞ –º–µ—Å—è—Ü: " + accumulatedMonth + " y.e.");

let getTargetMonth = function(){
    let result = Math.floor(mission / accumulatedMonth) ;
    if (result >= 0) {
        console.log("–í–∞—à–∞ —Ü–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –∑–∞ : " + result + " –º–µ—Å.");
    } else {
        console.log("–í–∞—à–∞ —Ü–µ–ª—å –Ω–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞");
    }
};
getTargetMonth();

let budgetDay = Math.round(accumulatedMonth / 30);
console.log("–ë—é—Ç–∂–µ—Ç –Ω–∞ –¥–µ–Ω—å " + budgetDay + " y.e.");


let getStatusIncome = function(){
    if (budgetDay >= 1200) {
        console.log("–£ –≤–∞—Å –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Ö–æ–¥–∞ ü§ë");
    } else if ( budgetDay >= 600 && budgetDay < 1200){
        console.log("–£ –≤–∞—Å —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Ö–æ–¥–∞ üòâ");
    } else if (budgetDay >= 0 && budgetDay < 600 ){
        console.log("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å —É—Ä–æ–≤–µ–Ω—å –¥–æ—Ö–æ–¥–∞ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ üò™");
    } else {
        console.log("–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üßê");
    }
};
getStatusIncome();



